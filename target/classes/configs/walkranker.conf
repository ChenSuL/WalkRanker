################################################### General Settings #############################################
# dataset: item ratings and user social inforamtion

dataset.training.lins=/data/ml100k/u1.base

# in case you use separate testing files
dataset.testing.lins=/data/ml100k/u1.test

# Rating threshold to convert original rating values to binary ones (during data loading); 
# Note that not all (item) recommendation models require binary ratings; -1: disable conversion
val.binary.threshold=0

# MISC
is.verbose=off
num.rand.seed=-1
is.prediction.out=off

# Email notification
is.email.notify=off
mail.smtp.host=smtp.gmail.com
mail.smtp.port=465
mail.smtp.auth=true
mail.smtp.user=xxx@gmail.com
mail.smtp.password=xxxx
mail.to=xxx@email.address

# validation priority: 1. cross-validation; 2. (training) ratio; 3. given n; 4: given ratio
is.cross.validation=off
is.parallel.folds=on
num.kfold=5
val.ratio=0.8
num.given.n=0
val.given.ratio=0.8

# testing view of rating predictions: all/-1, cold-start; 
rating.pred.view=all

# item recommendations
is.ranking.pred=on
is.diverse.used=off
num.reclist.len=10
num.ignore.items=-1
cold.user.threshold=5

recommender=AsyUnifiedRanker

################################################### Model-based Methods ##########################################
# general parameters for matrix factorization
val.learn.rate=0.0005
max.learn.rate=-1

val.reg.user=0.35
val.reg.item=0.35
val.reg.bias=0.35
val.reg.social=-1
projetion.reg=0.8
projetion.wei=2.0
projetion.alpha=0.1

num.factors=30
num.max.iter=50000
num.print.begin=1000
num.print.iter=5000

#num.max.iter=500
#num.print.begin=0
#num.print.iter=10
val.momentum=1

number.Core.Measure=6

# learn rate update: first check if bold driver, then consider constanly decay; if neither, keep unchanged.
is.bold.driver=off
is.undo.change=off
val.decay.rate=-1

# save learned model to files under the folder "Resulsts/#algorithm#". 
is.save.model=off


RankBPR.sFixedSteps=100
RankBPR.maxiRankSamples=1600
RankBPR.beta=1.0


# WalkRanker
walk.num = 1
walk.length = 100
walk.window.size = 10
walk.exp.weight = 0.4

